<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Configuration on Indalit Cloud Consulting</title>
    <link>http://www.indalit.com/tags/configuration/</link>
    <description>Recent content in Configuration on Indalit Cloud Consulting</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 Sep 2017 21:49:20 +0200</lastBuildDate>
    
	<atom:link href="http://www.indalit.com/tags/configuration/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AWS VPC To Span Across AZs</title>
      <link>http://www.indalit.com/blog/2017/09/20/aws-vpc-span/</link>
      <pubDate>Wed, 20 Sep 2017 21:49:20 +0200</pubDate>
      
      <guid>http://www.indalit.com/blog/2017/09/20/aws-vpc-span/</guid>
      <description>Did you know that a subnet cannot span multiple AWS Availability Zones while a VPC can? For more information on AWS VPC Configuration see: http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html</description>
    </item>
    
    <item>
      <title>AWS EC2 EBS Encryption of Boot Volume</title>
      <link>http://www.indalit.com/blog/2017/07/28/aws-ec2-ebs-encryption/</link>
      <pubDate>Fri, 28 Jul 2017 21:49:20 +0200</pubDate>
      
      <guid>http://www.indalit.com/blog/2017/07/28/aws-ec2-ebs-encryption/</guid>
      <description>Did you know the Amazon Elastic Block Store (EBS) boot volume can be encrypted?</description>
    </item>
    
    <item>
      <title>AWS Glacier Expedite</title>
      <link>http://www.indalit.com/blog/2017/06/20/aws-glacier-expedite/</link>
      <pubDate>Tue, 20 Jun 2017 21:49:20 +0200</pubDate>
      
      <guid>http://www.indalit.com/blog/2017/06/20/aws-glacier-expedite/</guid>
      <description>Did you know there is an option to expedite the retrieval of an Amazon Glacier archive within minutes? For more information on Amazon Glacier Expedite Option see: http://docs.aws.amazon.com/amazonglacier/latest/dev/downloading-an-archive-two-steps.html</description>
    </item>
    
    <item>
      <title>AWS EC2 Intances Metadata</title>
      <link>http://www.indalit.com/blog/2017/06/17/aws-ec2-instances-metadata/</link>
      <pubDate>Sat, 17 Jun 2017 21:49:20 +0200</pubDate>
      
      <guid>http://www.indalit.com/blog/2017/06/17/aws-ec2-instances-metadata/</guid>
      <description>Did you know that viewing on an AWS instance http://169.254.169.254/latest/meta-data/ will give you the metadata of your instance?
For more information on AWS EC2 Instances see: http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html</description>
    </item>
    
    <item>
      <title>AWS Auto Scaling Cooldown Period</title>
      <link>http://www.indalit.com/blog/2017/06/13/aws-autoscaling-cooldown/</link>
      <pubDate>Tue, 13 Jun 2017 21:49:20 +0200</pubDate>
      
      <guid>http://www.indalit.com/blog/2017/06/13/aws-autoscaling-cooldown/</guid>
      <description>Did you know the default AWS Auto Scaling cooldown period is 300 seconds? When AWS Auto Scaling launches a new instance, it will wait 300 seconds before launching a new one.</description>
    </item>
    
    <item>
      <title>AWS Auto Scaling Termination Policy</title>
      <link>http://www.indalit.com/blog/2017/06/13/aws-autoscaling-termination-policy/</link>
      <pubDate>Tue, 13 Jun 2017 21:49:20 +0200</pubDate>
      
      <guid>http://www.indalit.com/blog/2017/06/13/aws-autoscaling-termination-policy/</guid>
      <description>Did you know when you use the default termination policy with AWS Auto Scaling it doesnâ€™t terminate the instance with the oldest launch configuration automatically? It first tries to balance the number of instances across Availability Zones, then picks the Availability Zone with the most instances and terminates the instance with the oldest launch configuration. If there are more than one, then it ends the process by randomly picking the instance to terminate.</description>
    </item>
    
  </channel>
</rss>